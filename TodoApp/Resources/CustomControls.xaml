<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:TodoApp.Converters"
    xmlns:customControls="clr-namespace:TodoApp.CustomControls"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:TodoApp"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml">

    <!--  Default DateTimePicker style  -->
    <Style TargetType="{x:Type customControls:DateTimePicker}">
        <Setter Property="Margin" Value="1" />
        <Setter Property="Background" Value="{ui:ThemeResource ControlFillColorDefaultBrush}" />
        <Setter Property="Foreground" Value="{ui:ThemeResource TextFillColorPrimaryBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{ui:ThemeResource ControlStrokeColorOnAccentDefaultBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="MinHeight" Value="50" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MinWidth" Value="80" />
        <Setter Property="CornerRadius" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customControls:DateTimePicker}">
                    <Border
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        MinWidth="{TemplateBinding MinWidth}"
                        MinHeight="{TemplateBinding MinHeight}"
                        MaxWidth="{TemplateBinding MaxWidth}"
                        MaxHeight="{TemplateBinding MaxHeight}"
                        Margin="{TemplateBinding Margin}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        IsEnabled="{TemplateBinding IsEnabled}"
                        TextElement.FontFamily="{TemplateBinding FontFamily}"
                        TextElement.FontSize="{TemplateBinding FontSize}"
                        TextElement.FontStretch="{TemplateBinding FontStretch}"
                        TextElement.FontStyle="{TemplateBinding FontStyle}"
                        TextElement.FontWeight="{TemplateBinding FontWeight}"
                        TextElement.Foreground="{TemplateBinding Foreground}">
                        <Grid
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">

                            <ContentPresenter x:Name="PART_ContentHost" TextElement.Foreground="{TemplateBinding Foreground}" />

                            <Popup
                                AllowsTransparency="True"
                                Focusable="False"
                                IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsOpen}"
                                Placement="Bottom"
                                PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                StaysOpen="False"
                                VerticalOffset="1">
                                <StackPanel>
                                    <Calendar SelectedDate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Date, Mode=TwoWay}" />
                                    <customControls:TimePicker Time="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Time, Mode=TwoWay}" />
                                </StackPanel>
                            </Popup>
                        </Grid>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseUp">
                                <i:ChangePropertyAction
                                    PropertyName="IsOpen"
                                    TargetObject="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                    Value="True" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Default TimePicker style  -->
    <Style TargetType="{x:Type customControls:TimePicker}">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customControls:TimePicker}">
                    <Border
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        MinWidth="{TemplateBinding MinWidth}"
                        MinHeight="{TemplateBinding MinHeight}"
                        MaxWidth="{TemplateBinding MaxWidth}"
                        MaxHeight="{TemplateBinding MaxHeight}"
                        Margin="{TemplateBinding Margin}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        IsEnabled="{TemplateBinding IsEnabled}">
                        <Grid
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>

                            <customControls:NumberBox
                                Grid.Column="0"
                                AllowDecimal="False"
                                ChangeBy="1"
                                ChangeByOutOfBoundsBehaviour="LoopToOtherBound"
                                FontSize="{TemplateBinding FontSize}"
                                MaxDecimalPlaces="0"
                                MaxLines="1"
                                MaximumValue="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Is24HourFormat, Converter={converters:MaxHourValueConverter}}"
                                MinimumValue="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Is24HourFormat, Converter={converters:MinHourValueConverter}}"
                                Number="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Hour, Mode=TwoWay}"
                                NumberRange="OnlyPositive"
                                PlaceholderText="hh" />
                            <customControls:NumberBox
                                Grid.Column="1"
                                AllowDecimal="False"
                                ChangeBy="1"
                                ChangeByOutOfBoundsBehaviour="LoopToOtherBound"
                                FontSize="{TemplateBinding FontSize}"
                                MaxDecimalPlaces="0"
                                MaxLines="1"
                                MaximumValue="59"
                                MinimumValue="0"
                                Number="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Minute, Mode=TwoWay}"
                                NumberRange="OnlyPositive"
                                PlaceholderText="mm" />
                            <ComboBox
                                Grid.Column="2"
                                ItemsSource="{local:EnumBindingSource customControls:TimeMeridium}"
                                SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Meridium, Mode=TwoWay}">
                                <i:Interaction.Triggers>
                                    <i:DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Is24HourFormat}" Value="True">
                                        <i:ChangePropertyAction PropertyName="Visibility" Value="{x:Static Visibility.Collapsed}" />
                                    </i:DataTrigger>
                                    <i:DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Is24HourFormat}" Value="False">
                                        <i:ChangePropertyAction PropertyName="Visibility" Value="{x:Static Visibility.Visible}" />
                                    </i:DataTrigger>
                                </i:Interaction.Triggers>
                            </ComboBox>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Default NumberBox style. This is an edited version of WPFUI TextBox  -->
    <Style TargetType="{x:Type customControls:NumberBox}">
        <Setter Property="MaxDecimalPlaces" Value="0" />
        <Setter Property="AllowDecimal" Value="False" />
        <!--  Universal WPF UI focus  -->
        <Setter Property="FocusVisualStyle" Value="{DynamicResource DefaultControlFocusVisualStyle}" />
        <!--  Universal WPF UI focus  -->
        <!--  Universal WPF UI ContextMenu  -->
        <Setter Property="Foreground" Value="{ui:ThemeResource TextFillColorPrimaryBrush}" />
        <Setter Property="Background" Value="{ui:ThemeResource SolidBackgroundFillColorBaseBrush}" />
        <Setter Property="BorderBrush" Value="{ui:ThemeResource ControlElevationBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="MinHeight" Value="35" />
        <Setter Property="MinWidth" Value="65" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Border.CornerRadius" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="ToolTip">
            <Setter.Value>
                <ToolTip DataContext="{Binding RelativeSource={RelativeSource Self}, Path=PlacementTarget}">
                    <TextBlock>
                        <Run Text="Max =" />
                        <Run Text="{Binding MaximumValue}" />
                        <LineBreak />
                        <Run Text="Min =" />
                        <Run Text="{Binding MinimumValue}" />
                    </TextBlock>
                </ToolTip>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customControls:NumberBox}">
                    <Grid
                        x:Name="grid"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <Border
                            x:Name="ContentBorder"
                            MinWidth="{TemplateBinding MinWidth}"
                            MinHeight="{TemplateBinding MinHeight}"
                            Padding="0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}">
                            <Grid
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="1" Margin="{TemplateBinding Padding}">
                                    <ui:DynamicScrollViewer
                                        x:Name="PART_ContentHost"
                                        CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                        HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                        IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                        IsTabStop="{TemplateBinding ScrollViewer.IsTabStop}"
                                        TextElement.Foreground="{TemplateBinding Foreground}"
                                        VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" />
                                    <TextBlock
                                        x:Name="PlaceholderTextBox"
                                        Margin="0"
                                        Padding="1,0"
                                        VerticalAlignment="Center"
                                        FontSize="{TemplateBinding FontSize}"
                                        Foreground="{ui:ThemeResource TextPlaceholderColorBrush}"
                                        Text="{TemplateBinding PlaceholderText}"
                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Text, Converter={converters:PlaceholderTextVisibilityConverter}}" />
                                </Grid>

                                <!--  Buttons and Icons have no padding from the main element to allow absolute positions if height is larger than the text entry zone  -->

                                <!--  Increase,Decrease and Clear text buttons  -->
                                <Grid Grid.Column="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>

                                    <!--  increase decrease buttons  -->
                                    <Grid Grid.Column="0" MaxHeight="{Binding ElementName=ContentBorder, Path=ActualHeight, Mode=OneWay}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <ui:Button
                                            Grid.Row="0"
                                            MinWidth="30"
                                            Margin="1"
                                            Padding="1"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            HorizontalContentAlignment="Center"
                                            VerticalContentAlignment="Center"
                                            Appearance="Secondary"
                                            Background="Transparent"
                                            BorderBrush="Transparent"
                                            Command="{Binding Path=IncreaseByCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                            Cursor="Arrow"
                                            Foreground="{TemplateBinding Foreground}"
                                            IsTabStop="False"
                                            Visibility="{TemplateBinding ChangeByButtonVisibility}">
                                            <ui:Button.Icon>
                                                <ui:SymbolIcon FontSize="{TemplateBinding FontSize}" Symbol="ChevronUp24" />
                                            </ui:Button.Icon>
                                        </ui:Button>
                                        <ui:Button
                                            Grid.Row="1"
                                            MinWidth="30"
                                            Margin="1"
                                            Padding="1"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            HorizontalContentAlignment="Center"
                                            VerticalContentAlignment="Center"
                                            Appearance="Secondary"
                                            Background="Transparent"
                                            BorderBrush="Transparent"
                                            Command="{Binding Path=DecreaseByCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                            Cursor="Arrow"
                                            Foreground="{TemplateBinding Foreground}"
                                            IsTabStop="False"
                                            Visibility="{TemplateBinding ChangeByButtonVisibility}">
                                            <ui:Button.Icon>
                                                <ui:SymbolIcon FontSize="{TemplateBinding FontSize}" Symbol="ChevronDown24" />
                                            </ui:Button.Icon>
                                        </ui:Button>
                                    </Grid>

                                    <!--  Clear text button  -->
                                    <ui:Button
                                        Grid.Column="1"
                                        MinWidth="30"
                                        Margin="1"
                                        Padding="1"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        HorizontalContentAlignment="Center"
                                        VerticalContentAlignment="Center"
                                        Appearance="Secondary"
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        Command="{Binding Path=ClearTextCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                        Cursor="Arrow"
                                        Foreground="{TemplateBinding Foreground}"
                                        IsTabStop="False"
                                        Visibility="{TemplateBinding ClearTextButtonVisibility}">
                                        <ui:Button.Icon>
                                            <ui:SymbolIcon FontSize="{TemplateBinding FontSize}" Symbol="Dismiss24" />
                                        </ui:Button.Icon>
                                    </ui:Button>
                                </Grid>
                            </Grid>
                        </Border>
                        <Border
                            x:Name="AccentBorder"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            BorderBrush="{ui:ThemeResource ControlStrokeColorDefaultBrush}"
                            BorderThickness="0,0,0,1"
                            CornerRadius="{TemplateBinding Border.CornerRadius}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="AccentBorder" Property="BorderThickness" Value="0,0,0,2" />
                            <Setter TargetName="AccentBorder" Property="BorderBrush" Value="{ui:ThemeResource FocusStrokeColorOuterBrush}" />
                            <Setter TargetName="ContentBorder" Property="Background" Value="{ui:ThemeResource FocusStrokeColorInnerBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentBorder" Property="Background" Value="{ui:ThemeResource SolidBackgroundFillColorSecondaryBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Cursor" Value="IBeam" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentBorder" Property="Background" Value="{ui:ThemeResource ControlAltFillColorDisabledBrush}" />
                            <Setter TargetName="ContentBorder" Property="BorderBrush" Value="{ui:ThemeResource ControlStrongFillColorDisabledBrush}" />
                            <Setter TargetName="AccentBorder" Property="BorderBrush" Value="{ui:ThemeResource SubtleFillColorDisabledBrush}" />
                            <Setter Property="Foreground" Value="{ui:ThemeResource TextFillColorDisabledBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Default CustomTextBox style. This is an edited version of WPFUI TextBox  -->
    <Style TargetType="{x:Type customControls:CustomTextBox}">
        <!--  Universal WPF UI focus  -->
        <Setter Property="FocusVisualStyle" Value="{DynamicResource DefaultControlFocusVisualStyle}" />
        <!--  Universal WPF UI focus  -->
        <!--  Universal WPF UI ContextMenu  -->
        <Setter Property="ContextMenu" Value="{DynamicResource DefaultControlContextMenu}" />
        <!--  Universal WPF UI ContextMenu  -->

        <Setter Property="CaretBrush" Value="{ui:ThemeResource TextFillColorPrimaryBrush}" />
        <Setter Property="BorderBrush" Value="{ui:ThemeResource ControlElevationBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="MinWidth" Value="50" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Border.CornerRadius" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="{ui:ThemeResource TextFillColorPrimaryBrush}" />
        <Setter Property="Background" Value="{ui:ThemeResource ControlFillColorDefaultBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customControls:CustomTextBox}">
                    <Grid
                        x:Name="grid"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        TextElement.FontFamily="{TemplateBinding FontFamily}"
                        TextElement.FontSize="{TemplateBinding FontSize}"
                        TextElement.FontStretch="{TemplateBinding FontStretch}"
                        TextElement.FontStyle="{TemplateBinding FontStyle}"
                        TextElement.FontWeight="{TemplateBinding FontWeight}">
                        <Border
                            x:Name="ContentBorder"
                            MinWidth="{TemplateBinding MinWidth}"
                            MinHeight="{TemplateBinding MinHeight}"
                            Padding="0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}">
                            <Grid
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="1" Margin="{TemplateBinding Padding}">
                                    <ui:DynamicScrollViewer
                                        x:Name="PART_ContentHost"
                                        CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                        HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                        IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                        IsTabStop="{TemplateBinding ScrollViewer.IsTabStop}"
                                        TextElement.Foreground="{TemplateBinding Foreground}"
                                        VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" />
                                    <TextBlock
                                        x:Name="PlaceholderTextBox"
                                        Margin="0"
                                        Padding="1,0"
                                        VerticalAlignment="Center"
                                        FontSize="{TemplateBinding FontSize}"
                                        Foreground="{ui:ThemeResource TextPlaceholderColorBrush}"
                                        Text="{TemplateBinding PlaceholderText}"
                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Text, Mode=OneWay, Converter={converters:PlaceholderTextVisibilityConverter}}" />
                                </Grid>

                                <!--  Buttons and Icons have no padding from the main element to allow absolute positions if height is larger than the text entry zone  -->

                                <!--  Clear text button  -->
                                <ui:Button
                                    Grid.Column="2"
                                    MinWidth="30"
                                    Margin="1"
                                    Padding="1"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    Appearance="Secondary"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    Command="{Binding Path=ClearTextCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                    Cursor="Arrow"
                                    Foreground="{TemplateBinding Foreground}"
                                    IsTabStop="False"
                                    Visibility="{TemplateBinding ClearTextButtonVisibility}">
                                    <ui:Button.Icon>
                                        <ui:SymbolIcon FontSize="{TemplateBinding FontSize}" Symbol="Dismiss24" />
                                    </ui:Button.Icon>
                                </ui:Button>
                            </Grid>
                        </Border>
                        <Border
                            x:Name="AccentBorder"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            BorderBrush="{ui:ThemeResource ControlStrokeColorDefaultBrush}"
                            BorderThickness="0,0,0,1"
                            CornerRadius="{TemplateBinding Border.CornerRadius}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="AccentBorder" Property="BorderThickness" Value="0,0,0,2" />
                            <Setter TargetName="AccentBorder" Property="BorderBrush" Value="{ui:ThemeResource FocusStrokeColorOuterBrush}" />
                            <Setter TargetName="ContentBorder" Property="Background" Value="{ui:ThemeResource ControlFillColorInputActiveBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentBorder" Property="Background" Value="{ui:ThemeResource ControlFillColorSecondaryBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Cursor" Value="IBeam" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentBorder" Property="Background" Value="{ui:ThemeResource ControlAltFillColorDisabledBrush}" />
                            <Setter TargetName="ContentBorder" Property="BorderBrush" Value="{ui:ThemeResource ControlStrongFillColorDisabledBrush}" />
                            <Setter TargetName="AccentBorder" Property="BorderBrush" Value="{ui:ThemeResource SubtleFillColorDisabledBrush}" />
                            <Setter Property="Foreground" Value="{ui:ThemeResource TextFillColorDisabledBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>