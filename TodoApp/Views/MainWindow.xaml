<ui:FluentWindow
    x:Class="TodoApp.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:TodoApp.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dataModels="clr-namespace:TodoApp.Core.DataModels;assembly=TodoApp.Core"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:TodoApp.Views"
    xmlns:main="clr-namespace:TodoApp"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mvvm="clr-namespace:MvvmEssentials.Navigation.WPF.Navigation;assembly=MvvmEssentials.Navigation.WPF"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:viewmodels="clr-namespace:TodoApp.ViewModels"
    x:Name="mainWindow"
    Title="MainWindow"
    Width="1200"
    Height="800"
    d:DataContext="{d:DesignInstance Type=viewmodels:MainWindowViewModel,
                                     IsDesignTimeCreatable=True}"
    ExtendsContentIntoTitleBar="True"
    Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    TextElement.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    WindowBackdropType="Mica"
    WindowCornerPreference="Round"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding OnLoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Border
            Grid.Row="0"
            BorderBrush="{ui:ThemeResource ControlStrokeColorOnAccentDefaultBrush}"
            BorderThickness="0,0,0,1">
            <ui:TitleBar Title="Todo App" />
        </Border>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <Border
                Grid.Column="0"
                Width="150"
                BorderBrush="{ui:ThemeResource ControlStrokeColorOnAccentDefaultBrush}"
                BorderThickness="0,0,2,0">
                <StackPanel Background="{ui:ThemeResource ControlStrokeColorOnAccentDefaultBrush}" Orientation="Vertical">
                    <ui:Button
                        Command="{Binding NavigateCommand}"
                        CommandParameter="{x:Static main:ViewType.AllTasks}"
                        Content="All"
                        Icon="{ui:SymbolIcon Symbol=Square20,
                                             FontSize=18}"
                        Style="{StaticResource NavigationButtonExpandableButton}" />
                    <ui:Button
                        Command="{Binding NavigateCommand}"
                        CommandParameter="{x:Static main:ViewType.CompletedTasks}"
                        Content="Completed"
                        Icon="{ui:SymbolIcon Symbol=CheckmarkCircle20,
                                             FontSize=18}"
                        Style="{StaticResource NavigationButtonExpandableButton}" />
                    <Separator Foreground="White" />
                    <ItemsControl ItemsSource="{Binding TaskLists}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel IsItemsHost="True" Orientation="Vertical" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type dataModels:TaskList}">
                                <ui:Button
                                    Command="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl, Mode=FindAncestor}, Path=DataContext.(viewmodels:MainWindowViewModel.OpenTaskListCommand)}"
                                    CommandParameter="{Binding}"
                                    Content="{Binding Title}"
                                    Icon="{ui:SymbolIcon Symbol=LineHorizontal320}"
                                    Style="{StaticResource NavigationButtonExpandableButton}">
                                    <Button.Resources>
                                        <main:BindingProxy x:Key="host" Data="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext}" />
                                    </Button.Resources>
                                    <Button.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem
                                                Command="{Binding Source={StaticResource host}, Path=Data.(viewmodels:MainWindowViewModel.DeleteTaskListCommand)}"
                                                CommandParameter="{Binding}"
                                                Header="Delete list" />
                                        </ContextMenu>
                                    </Button.ContextMenu>
                                </ui:Button>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>

                <Border.ContextMenu>
                    <ContextMenu>
                        <MenuItem Command="{Binding CreateNewTaskListCommand}" Header="Add new list" />
                    </ContextMenu>
                </Border.ContextMenu>
            </Border>

            <ui:DynamicScrollViewer Grid.Column="1">
                <Frame mvvm:NavigationNamesAP.NavigationName="mainRegion" />
            </ui:DynamicScrollViewer>

            <ui:DynamicScrollViewer Grid.Column="2">
                <Frame mvvm:NavigationNamesAP.NavigationName="TaskDetailRegion" />
            </ui:DynamicScrollViewer>
        </Grid>
    </Grid>
</ui:FluentWindow>
